@using DioRed.Murka.Manager.Models

<EditForm Model="Model" OnValidSubmit="Submit">
    <DataAnnotationsValidator />

    <div class="row">
        <div class="mb-3 col-md">
            <label class="form-label">
                Промокод
                @if (AllowCodeChange)
                {
                    <InputText class="form-control" @bind-Value="Model.Code" aria-describedby="codeError" />
                    <div id="codeError" class="form-text">
                        <ValidationMessage For="() => Model.Code" />
                    </div>
                }
                else
                {
                    <input class="form-control" readonly="readonly" value="@Model.Code" />
                }
            </label>
        </div>
        <div class="mb-3 col-md">
            <label class="form-label">
                Срок действия (с)
                <InputText class="form-control" @bind-Value="@Model.ValidFrom" aria-describedby="validFromError" />
                <div id="validFromError" class="form-text">
                    <ValidationMessage For="() => Model.ValidFrom" />
                </div>
            </label>
        </div>
        <div class="mb-3 col-md">
            <label class="form-label">
                Срок действия (до)
                <InputText class="form-control" @bind-Value="@Model.ValidTo" aria-describedby="validToError" />
                <div id="validToError" class="form-text">
                    <ValidationMessage For="() => Model.ValidTo" />
                </div>
            </label>
        </div>
    </div>
    <div class="row">
        <div class="mb-3 col-12">
            <label class="form-label w-100">
                Содержимое
                <InputTextArea class="form-control" @bind-Value="@Model.Content" aria-describedby="contentError" />
                <div id="contentError" class="form-text">
                    <ValidationMessage For="() => Model.Content" />
                </div>
            </label>
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Сохранить</button>
</EditForm>

@code {
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; } = default!;

    [Parameter] public PromocodeModel Model { get; set; } = new();
    [Parameter] public bool AllowCodeChange { get; set; }

    async Task Submit() => await ModalInstance.CloseAsync(ModalResult.Ok(Model));
}